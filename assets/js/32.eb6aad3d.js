(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{383:function(a,s,t){"use strict";t.r(s);var e=t(25),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"java"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[a._v("#")]),a._v(" java")]),a._v(" "),t("h3",{attrs:{id:"java非静态代码块和静态代码块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java非静态代码块和静态代码块"}},[a._v("#")]),a._v(" Java非静态代码块和静态代码块")]),a._v(" "),t("blockquote",[t("p",[a._v("类中存在两种特殊的代码块，即非静态代码块和静态代码块，前者是直接由 { } 括起来的代码，而后者是由 static{ } 括起来的代码。")]),a._v(" "),t("p",[a._v("非静态代码块在类初始化创建实例时，将会被提取到类的构造器中执行，但是，非静态代码块会比构造器中的代码块先被执行。")])]),a._v(" "),t("h2",{attrs:{id:"保存动态代理字节码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#保存动态代理字节码"}},[a._v("#")]),a._v(" 保存动态代理字节码")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('// 设置系统属性jdk动态代理\nSystem.getProperties().put("sun.misc.ProxyGenerator.saveGeneratedFiles", "true"); \n// cglib 代理生成文件目录\nSystem.setProperty(DebuggingClassWriter.DEBUG_LOCATION_PROPERTY, "C:\\\\class");\n')])])]),t("h2",{attrs:{id:"string-hash碰撞字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string-hash碰撞字符串"}},[a._v("#")]),a._v(" String hash碰撞字符串")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("BBBB AaAa AaBB\nhashcode->2031744\n")])])]),t("h2",{attrs:{id:"解决fastjson首字母默认小写问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决fastjson首字母默认小写问题"}},[a._v("#")]),a._v(" 解决FastJSON首字母默认小写问题")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("String jsonObject = JSONObject.toJSONString(对象,new PascalNameFilter());\n")])])]),t("p",[a._v("或者")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("TypeUtils.compatibleWithJavaBean = true;\n")])])]),t("h2",{attrs:{id:"properties配置文件中的换行-多行-的坑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#properties配置文件中的换行-多行-的坑"}},[a._v("#")]),a._v(" properties配置文件中的换行(多行)的坑")]),a._v(" "),t("p",[a._v("properties中都是以name=value这样的k-v字符串对形式保存的。\n在写properties文件时,如果value非常长,看起来是非常不方便的，可以用\\来换行(最后一行不需要)，如下 :")]),a._v(" "),t("p",[a._v("sonar.exclude=a.java "),t("br"),a._v("\nb.java \\")]),a._v(" "),t("p",[a._v("这里的坑就是\\必须是每行的"),t("strong",[a._v("最后一个字符")]),a._v("！")]),a._v(" "),t("h2",{attrs:{id:"spring-boot获取resource目录下文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot获取resource目录下文件"}},[a._v("#")]),a._v(" spring boot获取resource目录下文件")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('Resource resource = new ClassPathResource("resource目录下的文件路径");\nFile file = resource.getFile();\n// Resource为spring中的\n')])])]),t("p",[a._v("-verbose:class")]),a._v(" "),t("h3",{attrs:{id:"执行-java-class-文件引入jar包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行-java-class-文件引入jar包"}},[a._v("#")]),a._v(" 执行 java class 文件引入jar包")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("java -classpath jar目录 class文件目录\n\njava -classpath .:lib/* Run \n")])])]),t("p",[a._v("备注：上面命令中是将当前（Run.class）目录下的lib目录下的所有jar包引入")])])}),[],!1,null,null,null);s.default=r.exports}}]);