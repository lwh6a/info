(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{370:function(v,_,e){"use strict";e.r(_);var a=e(25),t=Object(a.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"run"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[v._v("#")]),v._v(" run")]),v._v(" "),e("p",[e("code",[v._v("docker run [OPTIONS] IMAGE [COMMAND] [ARG...]")])]),v._v(" "),e("ul",[e("li",[v._v("OPTIONS说明：\n"),e("ul",[e("li",[v._v("-a stdin: 指定标准输入输出内容类型，可选 STDIN/STDOUT/STDERR 三项；")]),v._v(" "),e("li",[v._v("-d: 后台运行容器，并返回容器ID；")]),v._v(" "),e("li",[v._v("-i: 以交互模式运行容器，通常与 -t 同时使用；")]),v._v(" "),e("li",[v._v("-p: 端口映射，格式为：主机(宿主)端口:容器端口")]),v._v(" "),e("li",[v._v("-t: 为容器重新分配一个伪输入终端，通常与 -i 同时使用；")]),v._v(" "),e("li",[v._v('--name="nginx-lb": 为容器指定一个名称；')]),v._v(" "),e("li",[v._v("--dns 8.8.8.8: 指定容器使用的DNS服务器，默认和宿主一致；")]),v._v(" "),e("li",[v._v("--dns-search example.com: 指定容器DNS搜索域名，默认和宿主一致；")]),v._v(" "),e("li",[v._v('-h "mars": 指定容器的hostname；')]),v._v(" "),e("li",[v._v('-e username="ritchie": 设置环境变量；')]),v._v(" "),e("li",[v._v("--env-file=[]: 从指定文件读入环境变量；")]),v._v(" "),e("li",[v._v('--cpuset="0-2" or --cpuset="0,1,2": 绑定容器到指定CPU运行；')]),v._v(" "),e("li",[v._v("-m :设置容器使用内存最大值；")]),v._v(" "),e("li",[v._v('--net="bridge": 指定容器的网络连接类型，支持 bridge/host/none/container: 四种类型；')]),v._v(" "),e("li",[v._v("--link=[]: 添加链接到另一个容器；")]),v._v(" "),e("li",[v._v("--expose=[]: 开放一个端口或一组端口；")])])])]),v._v(" "),e("h2",{attrs:{id:"rm-删除一个或多少容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rm-删除一个或多少容器"}},[v._v("#")]),v._v(" rm 删除一个或多少容器")]),v._v(" "),e("p",[e("code",[v._v("docker rm [OPTIONS] CONTAINER [CONTAINER...]")])]),v._v(" "),e("ul",[e("li",[e("p",[v._v("OPTIONS说明：")]),v._v(" "),e("p",[v._v("-f :通过SIGKILL信号强制删除一个运行中的容器")]),v._v(" "),e("p",[v._v("-l :移除容器间的网络连接，而非容器本身")]),v._v(" "),e("p",[v._v("-v :-v 删除与容器关联的卷")])])]),v._v(" "),e("h2",{attrs:{id:"exec-在运行的容器中执行命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exec-在运行的容器中执行命令"}},[v._v("#")]),v._v(" exec ：在运行的容器中执行命令")]),v._v(" "),e("p",[e("code",[v._v("docker exec [OPTIONS] CONTAINER COMMAND [ARG...]")])]),v._v(" "),e("ul",[e("li",[e("p",[v._v("OPTIONS说明：")]),v._v(" "),e("p",[v._v("-d :分离模式: 在后台运行")]),v._v(" "),e("p",[v._v("-i :即使没有附加也保持STDIN 打开")]),v._v(" "),e("p",[v._v("-t :分配一个伪终端")])])]),v._v(" "),e("h2",{attrs:{id:"ps-列出容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ps-列出容器"}},[v._v("#")]),v._v(" ps : 列出容器")]),v._v(" "),e("p",[e("code",[v._v("docker ps [OPTIONS]")])]),v._v(" "),e("ul",[e("li",[e("p",[v._v("OPTIONS说明：")]),v._v(" "),e("p",[v._v("-a :显示所有的容器，包括未运行的。")]),v._v(" "),e("p",[v._v("-f :根据条件过滤显示的内容。")]),v._v(" "),e("p",[v._v("--format :指定返回值的模板文件。")]),v._v(" "),e("p",[v._v("-l :显示最近创建的容器。")]),v._v(" "),e("p",[v._v("-n :列出最近创建的n个容器。")]),v._v(" "),e("p",[v._v("--no-trunc :不截断输出。")]),v._v(" "),e("p",[v._v("-q :静默模式，只显示容器编号。")]),v._v(" "),e("p",[v._v("-s :显示总的文件大小。")])])]),v._v(" "),e("h2",{attrs:{id:"cp-用于容器与主机之间的数据拷贝。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cp-用于容器与主机之间的数据拷贝。"}},[v._v("#")]),v._v(" cp :用于容器与主机之间的数据拷贝。")]),v._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[v._v("```docker cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH|-```\n```docker cp [OPTIONS] SRC_PATH|- CONTAINER:DEST_PATH ```\n")])])]),e("h2",{attrs:{id:"images-列出本地镜像。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#images-列出本地镜像。"}},[v._v("#")]),v._v(" images : 列出本地镜像。")]),v._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[v._v("```docker images [OPTIONS] [REPOSITORY[:TAG]]```\n")])])]),e("ul",[e("li",[e("p",[v._v("OPTIONS说明：")]),v._v(" "),e("p",[v._v("-a :列出本地所有的镜像（含中间映像层，默认情况下，过滤掉中间映像层）；")]),v._v(" "),e("p",[v._v("--digests :显示镜像的摘要信息；")]),v._v(" "),e("p",[v._v("-f :显示满足条件的镜像；")]),v._v(" "),e("p",[v._v("--format :指定返回值的模板文件；")]),v._v(" "),e("p",[v._v("--no-trunc :显示完整的镜像信息；")]),v._v(" "),e("p",[v._v("-q :只显示镜像ID。")])])]),v._v(" "),e("h2",{attrs:{id:"rmi-删除本地一个或多少镜像。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rmi-删除本地一个或多少镜像。"}},[v._v("#")]),v._v(" rmi : 删除本地一个或多少镜像。")]),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v("docker rmi [OPTIONS] IMAGE [IMAGE...]")])])]),v._v(" "),e("li",[e("p",[v._v("OPTIONS说明：")]),v._v(" "),e("p",[v._v("-f :强制删除；")]),v._v(" "),e("p",[v._v("--no-prune :不移除该镜像的过程镜像，默认移除；")])])]),v._v(" "),e("h2",{attrs:{id:"build-命令用于使用-dockerfile-创建镜像。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#build-命令用于使用-dockerfile-创建镜像。"}},[v._v("#")]),v._v(" build 命令用于使用 Dockerfile 创建镜像。")]),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v("docker build [OPTIONS] PATH | URL | -")])])]),v._v(" "),e("li",[e("p",[v._v("OPTIONS说明：")]),v._v(" "),e("p",[v._v("--build-arg=[] :设置镜像创建时的变量；")]),v._v(" "),e("p",[v._v("--cpu-shares :设置 cpu 使用权重；")]),v._v(" "),e("p",[v._v("--cpu-period :限制 CPU CFS周期；")]),v._v(" "),e("p",[v._v("--cpu-quota :限制 CPU CFS配额；")]),v._v(" "),e("p",[v._v("--cpuset-cpus :指定使用的CPU id；")]),v._v(" "),e("p",[v._v("--cpuset-mems :指定使用的内存 id；")]),v._v(" "),e("p",[v._v("--disable-content-trust :忽略校验，默认开启；")]),v._v(" "),e("p",[v._v("-f :指定要使用的Dockerfile路径；")]),v._v(" "),e("p",[v._v("--force-rm :设置镜像过程中删除中间容器；")]),v._v(" "),e("p",[v._v("--isolation :使用容器隔离技术；")]),v._v(" "),e("p",[v._v("--label=[] :设置镜像使用的元数据；")]),v._v(" "),e("p",[v._v("-m :设置内存最大值；")]),v._v(" "),e("p",[v._v('--memory-swap :设置Swap的最大值为内存+swap，"-1"表示不限swap；')]),v._v(" "),e("p",[v._v("--no-cache :创建镜像的过程不使用缓存；")]),v._v(" "),e("p",[v._v("--pull :尝试去更新镜像的新版本；")]),v._v(" "),e("p",[v._v("--quiet, -q :安静模式，成功后只输出镜像 ID；")]),v._v(" "),e("p",[v._v("--rm :设置镜像成功后删除中间容器；")]),v._v(" "),e("p",[v._v("--shm-size :设置/dev/shm的大小，默认值是64M；")]),v._v(" "),e("p",[v._v("--ulimit :Ulimit配置。")]),v._v(" "),e("p",[v._v("--tag, -t: 镜像的名字及标签，通常 name:tag 或者 name 格式；可以在一次构建中为一个镜像设置多个标签。")]),v._v(" "),e("p",[v._v("--network: 默认 default。在构建期间设置RUN指令的网络模式")])])])])}),[],!1,null,null,null);_.default=t.exports}}]);